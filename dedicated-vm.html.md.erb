---
title: Redis for Pivotal Cloud Foundry
---

# Dedicated-VM Plan

An instance of this plan, provisions a single Redis process, on a single **dedicated VM**, which is suitable for production workloads.

The following commands are enabled:

* `MONITOR`
* `SAVE`
* `BGSAVE`
* `BGREWRITEAOF`

Data persistence is enabled through the use of `RDB` and `AOF`.

The `maxmemory` value for the Redis process is set to be 45% of the RAM for that instance.

The persistent disk should be set to be at least the size of the RAM available to the VM or greater, in order to account for the final and temporary RDB file generated by the Redis background save. 

## Operator Notes

These instances are pre-provisioned during the deployment of the tile from OpsManager, into a "pool". The VMs are provisioned and configured with a Redis process ready to be used, when an instance of the `dedicated-vm` plan is requested.

A default deployment will provision `5 instances` of the `dedicated-vm` plan into the "pool". This number can be increased on the `Resource Config` tab in OpsManager, either in the initial deployment or subsequently thereafter. The number of VMs **cannot** be decreased once deployed.

When a user provisions an instance, it is marked as in use and taken out of the "pool".

When a user deprovisions an instance, it is cleansed of any data and configuration to restore it to a fresh state and placed back into the "pool" ready to be used again.

This plan can be disabled by setting the number of instances of the `Dedicated node` job in OpsManager to be `0`.

## Diagram

<%= image_tag("dedicated.jpeg") %>

## Known Limitations
Limitations with the current `dedicated-vm` plan include:

* No ability to change the Redis configuration, the `CONFIG` command is disabled
* Cannot scale down the number of VMs on the plan, once deployed
* Not highly available, each instance is a single VM with no master / slave setup.
